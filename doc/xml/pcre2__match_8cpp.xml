<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="pcre2__match_8cpp" kind="file" language="C++">
    <compoundname>pcre2_match.cpp</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">pcre2.h</includes>
    <incdepgraph>
      <node id="92">
        <label>pcre2.h</label>
      </node>
      <node id="89">
        <label>pcre2_match.cpp</label>
        <link refid="pcre2_match.cpp"/>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>string.h</label>
      </node>
      <node id="90">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="pcre2__match_8cpp_1acff91275abcc225454675d6dfc39a58d" prot="public" static="no">
        <name>PCRE2_CODE_UNIT_WIDTH</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pcre2_match.cpp" line="46" column="9" bodyfile="src/pcre2_match.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pcre2__match_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pcre2_match.cpp" line="61" column="1" bodyfile="src/pcre2_match.cpp" bodystart="61" bodyend="421"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PCRE2<sp/>DEMONSTRATION<sp/>PROGRAM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>a<sp/>demonstration<sp/>program<sp/>to<sp/>illustrate<sp/>a<sp/>straightforward<sp/>way<sp/>of</highlight></codeline>
<codeline lineno="6"><highlight class="comment">calling<sp/>the<sp/>PCRE2<sp/>regular<sp/>expression<sp/>library<sp/>from<sp/>a<sp/>C<sp/>program.<sp/>See<sp/>the</highlight></codeline>
<codeline lineno="7"><highlight class="comment">pcre2sample<sp/>documentation<sp/>for<sp/>a<sp/>short<sp/>discussion<sp/>(&quot;man<sp/>pcre2sample&quot;<sp/>if<sp/>you<sp/>have</highlight></codeline>
<codeline lineno="8"><highlight class="comment">the<sp/>PCRE2<sp/>man<sp/>pages<sp/>installed).<sp/>PCRE2<sp/>is<sp/>a<sp/>revised<sp/>API<sp/>for<sp/>the<sp/>library,<sp/>and<sp/>is</highlight></codeline>
<codeline lineno="9"><highlight class="comment">incompatible<sp/>with<sp/>the<sp/>original<sp/>PCRE<sp/>API.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">There<sp/>are<sp/>actually<sp/>three<sp/>libraries,<sp/>each<sp/>supporting<sp/>a<sp/>different<sp/>code<sp/>unit</highlight></codeline>
<codeline lineno="12"><highlight class="comment">width.<sp/>This<sp/>demonstration<sp/>program<sp/>uses<sp/>the<sp/>8-bit<sp/>library.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">In<sp/>Unix-like<sp/>environments,<sp/>if<sp/>PCRE2<sp/>is<sp/>installed<sp/>in<sp/>your<sp/>standard<sp/>system</highlight></codeline>
<codeline lineno="15"><highlight class="comment">libraries,<sp/>you<sp/>should<sp/>be<sp/>able<sp/>to<sp/>compile<sp/>this<sp/>program<sp/>using<sp/>this<sp/>command:</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment">gcc<sp/>-Wall<sp/>pcre2demo.c<sp/>-lpcre2-8<sp/>-o<sp/>pcre2demo</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">If<sp/>PCRE2<sp/>is<sp/>not<sp/>installed<sp/>in<sp/>a<sp/>standard<sp/>place,<sp/>it<sp/>is<sp/>likely<sp/>to<sp/>be<sp/>installed</highlight></codeline>
<codeline lineno="20"><highlight class="comment">with<sp/>support<sp/>for<sp/>the<sp/>pkg-config<sp/>mechanism.<sp/>If<sp/>you<sp/>have<sp/>pkg-config,<sp/>you<sp/>can</highlight></codeline>
<codeline lineno="21"><highlight class="comment">compile<sp/>this<sp/>program<sp/>using<sp/>this<sp/>command:</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight></codeline>
<codeline lineno="23"><highlight class="comment">gcc<sp/>-Wall<sp/>pcre2demo.c<sp/>`pkg-config<sp/>--cflags<sp/>--libs<sp/>libpcre2-8`<sp/>-o<sp/>pcre2demo</highlight></codeline>
<codeline lineno="24"><highlight class="comment"></highlight></codeline>
<codeline lineno="25"><highlight class="comment">If<sp/>you<sp/>do<sp/>not<sp/>have<sp/>pkg-config,<sp/>you<sp/>may<sp/>have<sp/>to<sp/>use<sp/>this:</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight></codeline>
<codeline lineno="27"><highlight class="comment">gcc<sp/>-Wall<sp/>pcre2demo.c<sp/>-I/usr/local/include<sp/>-L/usr/local/lib<sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/>-R/usr/local/lib<sp/>-lpcre2-8<sp/>-o<sp/>pcre2demo</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight></codeline>
<codeline lineno="30"><highlight class="comment">Replace<sp/>&quot;/usr/local/include&quot;<sp/>and<sp/>&quot;/usr/local/lib&quot;<sp/>with<sp/>wherever<sp/>the<sp/>include<sp/>and</highlight></codeline>
<codeline lineno="31"><highlight class="comment">library<sp/>files<sp/>for<sp/>PCRE2<sp/>are<sp/>installed<sp/>on<sp/>your<sp/>system.<sp/>Only<sp/>some<sp/>operating</highlight></codeline>
<codeline lineno="32"><highlight class="comment">systems<sp/>(Solaris<sp/>is<sp/>one)<sp/>use<sp/>the<sp/>-R<sp/>option.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"></highlight></codeline>
<codeline lineno="34"><highlight class="comment">Building<sp/>under<sp/>Windows:</highlight></codeline>
<codeline lineno="35"><highlight class="comment"></highlight></codeline>
<codeline lineno="36"><highlight class="comment">If<sp/>you<sp/>want<sp/>to<sp/>statically<sp/>link<sp/>this<sp/>program<sp/>against<sp/>a<sp/>non-dll<sp/>.a<sp/>file,<sp/>you<sp/>must</highlight></codeline>
<codeline lineno="37"><highlight class="comment">define<sp/>PCRE2_STATIC<sp/>before<sp/>including<sp/>pcre2.h,<sp/>so<sp/>in<sp/>this<sp/>environment,<sp/>uncomment</highlight></codeline>
<codeline lineno="38"><highlight class="comment">the<sp/>following<sp/>line.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#define<sp/>PCRE2_STATIC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>macro<sp/>must<sp/>be<sp/>defined<sp/>before<sp/>including<sp/>pcre2.h.<sp/>For<sp/>a<sp/>program<sp/>that<sp/>uses</highlight></codeline>
<codeline lineno="43"><highlight class="comment">only<sp/>one<sp/>code<sp/>unit<sp/>width,<sp/>it<sp/>makes<sp/>it<sp/>possible<sp/>to<sp/>use<sp/>generic<sp/>function<sp/>names</highlight></codeline>
<codeline lineno="44"><highlight class="comment">such<sp/>as<sp/>pcre2_compile().<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCRE2_CODE_UNIT_WIDTH<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pcre2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/**************************************************************************</highlight></codeline>
<codeline lineno="54"><highlight class="comment">*<sp/>Here<sp/>is<sp/>the<sp/>program.<sp/>The<sp/>API<sp/>includes<sp/>the<sp/>concept<sp/>of<sp/>&quot;contexts&quot;<sp/>for<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="55"><highlight class="comment">*<sp/>setting<sp/>up<sp/>unusual<sp/>interface<sp/>requirements<sp/>for<sp/>compiling<sp/>and<sp/>matching,<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="56"><highlight class="comment">*<sp/>such<sp/>as<sp/>custom<sp/>memory<sp/>managers<sp/>and<sp/>non-standard<sp/>newline<sp/>definitions.<sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="comment">*<sp/>This<sp/>program<sp/>does<sp/>not<sp/>do<sp/>any<sp/>of<sp/>this,<sp/>so<sp/>it<sp/>makes<sp/>no<sp/>use<sp/>of<sp/>contexts,<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="58"><highlight class="comment">*<sp/>always<sp/>passing<sp/>NULL<sp/>where<sp/>a<sp/>context<sp/>could<sp/>be<sp/>given.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="59"><highlight class="comment">**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal">pcre2_code<sp/>*re;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">PCRE2_SPTR<sp/>pattern;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PCRE2_SPTR<sp/>is<sp/>a<sp/>pointer<sp/>to<sp/>unsigned<sp/>code<sp/>units<sp/>of<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">PCRE2_SPTR<sp/>subject;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>appropriate<sp/>width<sp/>(8,<sp/>16,<sp/>or<sp/>32<sp/>bits).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">PCRE2_SPTR<sp/>name_table;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>crlf_is_newline;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errornumber;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>find_all;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>namecount;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name_entry_size;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>utf8;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">uint32_t<sp/>option_bits;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">uint32_t<sp/>newline;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">PCRE2_SIZE<sp/>erroroffset;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">PCRE2_SIZE<sp/>*ovector;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>subject_length;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">pcre2_match_data<sp/>*match_data;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">/**************************************************************************</highlight></codeline>
<codeline lineno="89"><highlight class="comment">*<sp/>First,<sp/>sort<sp/>out<sp/>the<sp/>command<sp/>line.<sp/>There<sp/>is<sp/>only<sp/>one<sp/>possible<sp/>option<sp/>at<sp/><sp/>*</highlight></codeline>
<codeline lineno="90"><highlight class="comment">*<sp/>the<sp/>moment,<sp/>&quot;-g&quot;<sp/>to<sp/>request<sp/>repeated<sp/>matching<sp/>to<sp/>find<sp/>all<sp/>occurrences,<sp/><sp/>*</highlight></codeline>
<codeline lineno="91"><highlight class="comment">*<sp/>like<sp/>Perl&apos;s<sp/>/g<sp/>option.<sp/>We<sp/>set<sp/>the<sp/>variable<sp/>find_all<sp/>to<sp/>a<sp/>non-zero<sp/>value<sp/>*</highlight></codeline>
<codeline lineno="92"><highlight class="comment">*<sp/>if<sp/>the<sp/>-g<sp/>option<sp/>is<sp/>present.<sp/>Apart<sp/>from<sp/>that,<sp/>there<sp/>must<sp/>be<sp/>exactly<sp/>two<sp/>*</highlight></codeline>
<codeline lineno="93"><highlight class="comment">*<sp/>arguments.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="94"><highlight class="comment">**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">find_all<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>argc;<sp/>i++)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(argv[i],<sp/></highlight><highlight class="stringliteral">&quot;-g&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>find_all<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>After<sp/>the<sp/>options,<sp/>we<sp/>require<sp/>exactly<sp/>two<sp/>arguments,<sp/>which<sp/>are<sp/>the<sp/>pattern,</highlight></codeline>
<codeline lineno="104"><highlight class="comment">and<sp/>the<sp/>subject<sp/>string.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>-<sp/>i<sp/>!=<sp/>2)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Two<sp/>arguments<sp/>required:<sp/>a<sp/>regex<sp/>and<sp/>a<sp/>subject<sp/>string\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>As<sp/>pattern<sp/>and<sp/>subject<sp/>are<sp/>char<sp/>arguments,<sp/>they<sp/>can<sp/>be<sp/>straightforwardly</highlight></codeline>
<codeline lineno="113"><highlight class="comment">cast<sp/>to<sp/>PCRE2_SPTR<sp/>as<sp/>we<sp/>are<sp/>working<sp/>in<sp/>8-bit<sp/>code<sp/>units.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">pattern<sp/>=<sp/>(PCRE2_SPTR)argv[i];</highlight></codeline>
<codeline lineno="116"><highlight class="normal">subject<sp/>=<sp/>(PCRE2_SPTR)argv[i+1];</highlight></codeline>
<codeline lineno="117"><highlight class="normal">subject_length<sp/>=<sp/>strlen((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)subject);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="121"><highlight class="comment">*<sp/>Now<sp/>we<sp/>are<sp/>going<sp/>to<sp/>compile<sp/>the<sp/>regular<sp/>expression<sp/>pattern,<sp/>and<sp/>handle<sp/>*</highlight></codeline>
<codeline lineno="122"><highlight class="comment">*<sp/>any<sp/>errors<sp/>that<sp/>are<sp/>detected.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="123"><highlight class="comment">*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">re<sp/>=<sp/>pcre2_compile(</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>pattern,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>pattern<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>PCRE2_ZERO_TERMINATED,<sp/></highlight><highlight class="comment">/*<sp/>indicates<sp/>pattern<sp/>is<sp/>zero-terminated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>default<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>&amp;errornumber,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>error<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>&amp;erroroffset,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>error<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>default<sp/>compile<sp/>context<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Compilation<sp/>failed:<sp/>print<sp/>the<sp/>error<sp/>message<sp/>and<sp/>exit.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(re<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>PCRE2_UCHAR<sp/>buffer[256];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>pcre2_get_error_message(errornumber,<sp/>buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;PCRE2<sp/>compilation<sp/>failed<sp/>at<sp/>offset<sp/>%d:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)erroroffset,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="146"><highlight class="comment">*<sp/>If<sp/>the<sp/>compilation<sp/>succeeded,<sp/>we<sp/>call<sp/>PCRE<sp/>again,<sp/>in<sp/>order<sp/>to<sp/>do<sp/>a<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="147"><highlight class="comment">*<sp/>pattern<sp/>match<sp/>against<sp/>the<sp/>subject<sp/>string.<sp/>This<sp/>does<sp/>just<sp/>ONE<sp/>match.<sp/>If<sp/>*</highlight></codeline>
<codeline lineno="148"><highlight class="comment">*<sp/>further<sp/>matching<sp/>is<sp/>needed,<sp/>it<sp/>will<sp/>be<sp/>done<sp/>below.<sp/>Before<sp/>running<sp/>the<sp/><sp/>*</highlight></codeline>
<codeline lineno="149"><highlight class="comment">*<sp/>match<sp/>we<sp/>must<sp/>set<sp/>up<sp/>a<sp/>match_data<sp/>block<sp/>for<sp/>holding<sp/>the<sp/>result.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="150"><highlight class="comment">*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Using<sp/>this<sp/>function<sp/>ensures<sp/>that<sp/>the<sp/>block<sp/>is<sp/>exactly<sp/>the<sp/>right<sp/>size<sp/>for</highlight></codeline>
<codeline lineno="153"><highlight class="comment">the<sp/>number<sp/>of<sp/>capturing<sp/>parentheses<sp/>in<sp/>the<sp/>pattern.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">match_data<sp/>=<sp/>pcre2_match_data_create_from_pattern(re,<sp/>NULL);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">rc<sp/>=<sp/>pcre2_match(</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>re,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>compiled<sp/>pattern<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>subject,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>subject<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>subject_length,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>length<sp/>of<sp/>the<sp/>subject<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>at<sp/>offset<sp/>0<sp/>in<sp/>the<sp/>subject<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>default<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>match_data,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>block<sp/>for<sp/>storing<sp/>the<sp/>result<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>default<sp/>match<sp/>context<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Matching<sp/>failed:<sp/>handle<sp/>error<sp/>cases<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(rc)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PCRE2_ERROR_NOMATCH:<sp/>printf(</highlight><highlight class="stringliteral">&quot;No<sp/>match\n&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/>Handle<sp/>other<sp/>special<sp/>cases<sp/>if<sp/>you<sp/>like</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>printf(</highlight><highlight class="stringliteral">&quot;Matching<sp/>error<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>rc);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>pcre2_match_data_free(match_data);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>memory<sp/>used<sp/>for<sp/>the<sp/>match<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>pcre2_code_free(re);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>data<sp/>and<sp/>the<sp/>compiled<sp/>pattern.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Match<sp/>succeded.<sp/>Get<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>output<sp/>vector,<sp/>where<sp/>string<sp/>offsets<sp/>are</highlight></codeline>
<codeline lineno="184"><highlight class="comment">stored.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal">ovector<sp/>=<sp/>pcre2_get_ovector_pointer(match_data);</highlight></codeline>
<codeline lineno="187"><highlight class="normal">printf(</highlight><highlight class="stringliteral">&quot;\nMatch<sp/>succeeded<sp/>at<sp/>offset<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ovector[0]);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="191"><highlight class="comment">*<sp/>We<sp/>have<sp/>found<sp/>the<sp/>first<sp/>match<sp/>within<sp/>the<sp/>subject<sp/>string.<sp/>If<sp/>the<sp/>output<sp/>*</highlight></codeline>
<codeline lineno="192"><highlight class="comment">*<sp/>vector<sp/>wasn&apos;t<sp/>big<sp/>enough,<sp/>say<sp/>so.<sp/>Then<sp/>output<sp/>any<sp/>substrings<sp/>that<sp/>were<sp/>*</highlight></codeline>
<codeline lineno="193"><highlight class="comment">*<sp/>captured.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="194"><highlight class="comment">*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>output<sp/>vector<sp/>wasn&apos;t<sp/>big<sp/>enough.<sp/>This<sp/>should<sp/>not<sp/>happen,<sp/>because<sp/>we<sp/>used</highlight></codeline>
<codeline lineno="197"><highlight class="comment">pcre2_match_data_create_from_pattern()<sp/>above.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ovector<sp/>was<sp/>not<sp/>big<sp/>enough<sp/>for<sp/>all<sp/>the<sp/>captured<sp/>substrings\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Show<sp/>substrings<sp/>stored<sp/>in<sp/>the<sp/>output<sp/>vector<sp/>by<sp/>number.<sp/>Obviously,<sp/>in<sp/>a<sp/>real</highlight></codeline>
<codeline lineno="203"><highlight class="comment">application<sp/>you<sp/>might<sp/>want<sp/>to<sp/>do<sp/>things<sp/>other<sp/>than<sp/>print<sp/>them.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rc;<sp/>i++)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>PCRE2_SPTR<sp/>substring_start<sp/>=<sp/>subject<sp/>+<sp/>ovector[2*i];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>substring_length<sp/>=<sp/>ovector[2*i+1]<sp/>-<sp/>ovector[2*i];</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%2d:<sp/>%.*s\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)substring_length,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)substring_start);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">/**************************************************************************</highlight></codeline>
<codeline lineno="214"><highlight class="comment">*<sp/>That<sp/>concludes<sp/>the<sp/>basic<sp/>part<sp/>of<sp/>this<sp/>demonstration<sp/>program.<sp/>We<sp/>have<sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="215"><highlight class="comment">*<sp/>compiled<sp/>a<sp/>pattern,<sp/>and<sp/>performed<sp/>a<sp/>single<sp/>match.<sp/>The<sp/>code<sp/>that<sp/>follows<sp/>*</highlight></codeline>
<codeline lineno="216"><highlight class="comment">*<sp/>shows<sp/>first<sp/>how<sp/>to<sp/>access<sp/>named<sp/>substrings,<sp/>and<sp/>then<sp/>how<sp/>to<sp/>code<sp/>for<sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="217"><highlight class="comment">*<sp/>repeated<sp/>matches<sp/>on<sp/>the<sp/>same<sp/>subject.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="218"><highlight class="comment">**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>See<sp/>if<sp/>there<sp/>are<sp/>any<sp/>named<sp/>substrings,<sp/>and<sp/>if<sp/>so,<sp/>show<sp/>them<sp/>by<sp/>name.<sp/>First</highlight></codeline>
<codeline lineno="221"><highlight class="comment">we<sp/>have<sp/>to<sp/>extract<sp/>the<sp/>count<sp/>of<sp/>named<sp/>parentheses<sp/>from<sp/>the<sp/>pattern.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal">(void)pcre2_pattern_info(</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>re,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>compiled<sp/>pattern<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>PCRE2_INFO_NAMECOUNT,<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>number<sp/>of<sp/>named<sp/>substrings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>&amp;namecount);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>where<sp/>to<sp/>put<sp/>the<sp/>answer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(namecount<sp/>&lt;=<sp/>0)<sp/>printf(</highlight><highlight class="stringliteral">&quot;No<sp/>named<sp/>substrings\n&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>PCRE2_SPTR<sp/>tabptr;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Named<sp/>substrings\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Before<sp/>we<sp/>can<sp/>access<sp/>the<sp/>substrings,<sp/>we<sp/>must<sp/>extract<sp/>the<sp/>table<sp/>for</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/>translating<sp/>names<sp/>to<sp/>numbers,<sp/>and<sp/>the<sp/>size<sp/>of<sp/>each<sp/>entry<sp/>in<sp/>the<sp/>table.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>(void)pcre2_pattern_info(</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>re,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>compiled<sp/>pattern<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>PCRE2_INFO_NAMETABLE,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>address<sp/>of<sp/>the<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;name_table);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>where<sp/>to<sp/>put<sp/>the<sp/>answer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>(void)pcre2_pattern_info(</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>re,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>compiled<sp/>pattern<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>PCRE2_INFO_NAMEENTRYSIZE,<sp/></highlight><highlight class="comment">/*<sp/>size<sp/>of<sp/>each<sp/>entry<sp/>in<sp/>the<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;name_entry_size);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>where<sp/>to<sp/>put<sp/>the<sp/>answer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>we<sp/>can<sp/>scan<sp/>the<sp/>table<sp/>and,<sp/>for<sp/>each<sp/>entry,<sp/>print<sp/>the<sp/>number,<sp/>the<sp/>name,</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/>and<sp/>the<sp/>substring<sp/>itself.<sp/>In<sp/>the<sp/>8-bit<sp/>library<sp/>the<sp/>number<sp/>is<sp/>held<sp/>in<sp/>two</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/><sp/>bytes,<sp/>most<sp/>significant<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>tabptr<sp/>=<sp/>name_table;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>namecount;<sp/>i++)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>(tabptr[0]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>tabptr[1];</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;(%d)<sp/>%*s:<sp/>%.*s\n&quot;</highlight><highlight class="normal">,<sp/>n,<sp/>name_entry_size<sp/>-<sp/>3,<sp/>tabptr<sp/>+<sp/>2,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(ovector[2*n+1]<sp/>-<sp/>ovector[2*n]),<sp/>subject<sp/>+<sp/>ovector[2*n]);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>tabptr<sp/>+=<sp/>name_entry_size;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="262"><highlight class="comment">*<sp/>If<sp/>the<sp/>&quot;-g&quot;<sp/>option<sp/>was<sp/>given<sp/>on<sp/>the<sp/>command<sp/>line,<sp/>we<sp/>want<sp/>to<sp/>continue<sp/><sp/>*</highlight></codeline>
<codeline lineno="263"><highlight class="comment">*<sp/>to<sp/>search<sp/>for<sp/>additional<sp/>matches<sp/>in<sp/>the<sp/>subject<sp/>string,<sp/>in<sp/>a<sp/>similar<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="264"><highlight class="comment">*<sp/>way<sp/>to<sp/>the<sp/>/g<sp/>option<sp/>in<sp/>Perl.<sp/>This<sp/>turns<sp/>out<sp/>to<sp/>be<sp/>trickier<sp/>than<sp/>you<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="265"><highlight class="comment">*<sp/>might<sp/>think<sp/>because<sp/>of<sp/>the<sp/>possibility<sp/>of<sp/>matching<sp/>an<sp/>empty<sp/>string.<sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="266"><highlight class="comment">*<sp/>What<sp/>happens<sp/>is<sp/>as<sp/>follows:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="267"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="268"><highlight class="comment">*<sp/>If<sp/>the<sp/>previous<sp/>match<sp/>was<sp/>NOT<sp/>for<sp/>an<sp/>empty<sp/>string,<sp/>we<sp/>can<sp/>just<sp/>start<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="269"><highlight class="comment">*<sp/>the<sp/>next<sp/>match<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>previous<sp/>one.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="270"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="271"><highlight class="comment">*<sp/>If<sp/>the<sp/>previous<sp/>match<sp/>WAS<sp/>for<sp/>an<sp/>empty<sp/>string,<sp/>we<sp/>can&apos;t<sp/>do<sp/>that,<sp/>as<sp/>it<sp/>*</highlight></codeline>
<codeline lineno="272"><highlight class="comment">*<sp/>would<sp/>lead<sp/>to<sp/>an<sp/>infinite<sp/>loop.<sp/>Instead,<sp/>a<sp/>call<sp/>of<sp/>pcre2_match()<sp/>is<sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="273"><highlight class="comment">*<sp/>made<sp/>with<sp/>the<sp/>PCRE2_NOTEMPTY_ATSTART<sp/>and<sp/>PCRE2_ANCHORED<sp/>flags<sp/>set.<sp/>The<sp/>*</highlight></codeline>
<codeline lineno="274"><highlight class="comment">*<sp/>first<sp/>of<sp/>these<sp/>tells<sp/>PCRE2<sp/>that<sp/>an<sp/>empty<sp/>string<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="275"><highlight class="comment">*<sp/>subject<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>match;<sp/>other<sp/>possibilities<sp/>must<sp/>be<sp/>tried.<sp/>The<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="276"><highlight class="comment">*<sp/>second<sp/>flag<sp/>restricts<sp/>PCRE2<sp/>to<sp/>one<sp/>match<sp/>attempt<sp/>at<sp/>the<sp/>initial<sp/>string<sp/>*</highlight></codeline>
<codeline lineno="277"><highlight class="comment">*<sp/>position.<sp/>If<sp/>this<sp/>match<sp/>succeeds,<sp/>an<sp/>alternative<sp/>to<sp/>the<sp/>empty<sp/>string<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="278"><highlight class="comment">*<sp/>match<sp/>has<sp/>been<sp/>found,<sp/>and<sp/>we<sp/>can<sp/>print<sp/>it<sp/>and<sp/>proceed<sp/>round<sp/>the<sp/>loop,<sp/><sp/>*</highlight></codeline>
<codeline lineno="279"><highlight class="comment">*<sp/>advancing<sp/>by<sp/>the<sp/>length<sp/>of<sp/>whatever<sp/>was<sp/>found.<sp/>If<sp/>this<sp/>match<sp/>does<sp/>not<sp/><sp/>*</highlight></codeline>
<codeline lineno="280"><highlight class="comment">*<sp/>succeed,<sp/>we<sp/>still<sp/>stay<sp/>in<sp/>the<sp/>loop,<sp/>advancing<sp/>by<sp/>just<sp/>one<sp/>character.<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="281"><highlight class="comment">*<sp/>In<sp/>UTF-8<sp/>mode,<sp/>which<sp/>can<sp/>be<sp/>set<sp/>by<sp/>(*UTF)<sp/>in<sp/>the<sp/>pattern,<sp/>this<sp/>may<sp/>be<sp/><sp/>*</highlight></codeline>
<codeline lineno="282"><highlight class="comment">*<sp/>more<sp/>than<sp/>one<sp/>byte.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="283"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="284"><highlight class="comment">*<sp/>However,<sp/>there<sp/>is<sp/>a<sp/>complication<sp/>concerned<sp/>with<sp/>newlines.<sp/>When<sp/>the<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="285"><highlight class="comment">*<sp/>newline<sp/>convention<sp/>is<sp/>such<sp/>that<sp/>CRLF<sp/>is<sp/>a<sp/>valid<sp/>newline,<sp/>we<sp/>must<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="286"><highlight class="comment">*<sp/>advance<sp/>by<sp/>two<sp/>characters<sp/>rather<sp/>than<sp/>one.<sp/>The<sp/>newline<sp/>convention<sp/>can<sp/><sp/>*</highlight></codeline>
<codeline lineno="287"><highlight class="comment">*<sp/>be<sp/>set<sp/>in<sp/>the<sp/>regex<sp/>by<sp/>(*CR),<sp/>etc.;<sp/>if<sp/>not,<sp/>we<sp/>must<sp/>find<sp/>the<sp/>default.<sp/><sp/>*</highlight></codeline>
<codeline lineno="288"><highlight class="comment">*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!find_all)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>-g<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>pcre2_match_data_free(match_data);<sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>the<sp/>memory<sp/>that<sp/>was<sp/>used<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>pcre2_code_free(re);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>the<sp/>match<sp/>data<sp/>and<sp/>the<sp/>pattern.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Exit<sp/>the<sp/>program.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Before<sp/>running<sp/>the<sp/>loop,<sp/>check<sp/>for<sp/>UTF-8<sp/>and<sp/>whether<sp/>CRLF<sp/>is<sp/>a<sp/>valid<sp/>newline</highlight></codeline>
<codeline lineno="298"><highlight class="comment">sequence.<sp/>First,<sp/>find<sp/>the<sp/>options<sp/>with<sp/>which<sp/>the<sp/>regex<sp/>was<sp/>compiled<sp/>and<sp/>extract</highlight></codeline>
<codeline lineno="299"><highlight class="comment">the<sp/>UTF<sp/>state.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal">(void)pcre2_pattern_info(re,<sp/>PCRE2_INFO_ALLOPTIONS,<sp/>&amp;option_bits);</highlight></codeline>
<codeline lineno="302"><highlight class="normal">utf8<sp/>=<sp/>(option_bits<sp/>&amp;<sp/>PCRE2_UTF)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Now<sp/>find<sp/>the<sp/>newline<sp/>convention<sp/>and<sp/>see<sp/>whether<sp/>CRLF<sp/>is<sp/>a<sp/>valid<sp/>newline</highlight></codeline>
<codeline lineno="305"><highlight class="comment">sequence.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal">(void)pcre2_pattern_info(re,<sp/>PCRE2_INFO_NEWLINE,<sp/>&amp;newline);</highlight></codeline>
<codeline lineno="308"><highlight class="normal">crlf_is_newline<sp/>=<sp/>newline<sp/>==<sp/>PCRE2_NEWLINE_ANY<sp/>||</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newline<sp/>==<sp/>PCRE2_NEWLINE_CRLF<sp/>||</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newline<sp/>==<sp/>PCRE2_NEWLINE_ANYCRLF;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Loop<sp/>for<sp/>second<sp/>and<sp/>subsequent<sp/>matches<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>uint32_t<sp/>options<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Normally<sp/>no<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>PCRE2_SIZE<sp/>start_offset<sp/>=<sp/>ovector[1];<sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>at<sp/>end<sp/>of<sp/>previous<sp/>match<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>previous<sp/>match<sp/>was<sp/>for<sp/>an<sp/>empty<sp/>string,<sp/>we<sp/>are<sp/>finished<sp/>if<sp/>we<sp/>are</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>subject.<sp/>Otherwise,<sp/>arrange<sp/>to<sp/>run<sp/>another<sp/>match<sp/>at<sp/>the</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/><sp/>same<sp/>point<sp/>to<sp/>see<sp/>if<sp/>a<sp/>non-empty<sp/>match<sp/>can<sp/>be<sp/>found.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ovector[0]<sp/>==<sp/>ovector[1])</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ovector[0]<sp/>==<sp/>subject_length)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>options<sp/>=<sp/>PCRE2_NOTEMPTY_ATSTART<sp/>|<sp/>PCRE2_ANCHORED;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Run<sp/>the<sp/>next<sp/>matching<sp/>operation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>rc<sp/>=<sp/>pcre2_match(</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>re,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>compiled<sp/>pattern<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>subject,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>subject<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>subject_length,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>length<sp/>of<sp/>the<sp/>subject<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>start_offset,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>starting<sp/>offset<sp/>in<sp/>the<sp/>subject<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>options,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>match_data,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>block<sp/>for<sp/>storing<sp/>the<sp/>result<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>default<sp/>match<sp/>context<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>time,<sp/>a<sp/>result<sp/>of<sp/>NOMATCH<sp/>isn&apos;t<sp/>an<sp/>error.<sp/>If<sp/>the<sp/>value<sp/>in<sp/>&quot;options&quot;</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/><sp/>is<sp/>zero,<sp/>it<sp/>just<sp/>means<sp/>we<sp/>have<sp/>found<sp/>all<sp/>possible<sp/>matches,<sp/>so<sp/>the<sp/>loop<sp/>ends.</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/><sp/>Otherwise,<sp/>it<sp/>means<sp/>we<sp/>have<sp/>failed<sp/>to<sp/>find<sp/>a<sp/>non-empty-string<sp/>match<sp/>at<sp/>a</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/>point<sp/>where<sp/>there<sp/>was<sp/>a<sp/>previous<sp/>empty-string<sp/>match.<sp/>In<sp/>this<sp/>case,<sp/>we<sp/>do<sp/>what</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/>Perl<sp/>does:<sp/>advance<sp/>the<sp/>matching<sp/>position<sp/>by<sp/>one<sp/>character,<sp/>and<sp/>continue.<sp/>We</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/>do<sp/>this<sp/>by<sp/>setting<sp/>the<sp/>&quot;end<sp/>of<sp/>previous<sp/>match&quot;<sp/>offset,<sp/>because<sp/>that<sp/>is<sp/>picked</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/>up<sp/>at<sp/>the<sp/>top<sp/>of<sp/>the<sp/>loop<sp/>as<sp/>the<sp/>point<sp/>at<sp/>which<sp/>to<sp/>start<sp/>again.</highlight></codeline>
<codeline lineno="347"><highlight class="comment"></highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/>There<sp/>are<sp/>two<sp/>complications:<sp/>(a)<sp/>When<sp/>CRLF<sp/>is<sp/>a<sp/>valid<sp/>newline<sp/>sequence,<sp/>and</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/>the<sp/>current<sp/>position<sp/>is<sp/>just<sp/>before<sp/>it,<sp/>advance<sp/>by<sp/>an<sp/>extra<sp/>byte.<sp/>(b)</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/>Otherwise<sp/>we<sp/>must<sp/>ensure<sp/>that<sp/>we<sp/>skip<sp/>an<sp/>entire<sp/>UTF<sp/>character<sp/>if<sp/>we<sp/>are<sp/>in</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/>UTF<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc<sp/>==<sp/>PCRE2_ERROR_NOMATCH)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>matches<sp/>found<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>ovector[1]<sp/>=<sp/>start_offset<sp/>+<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Advance<sp/>one<sp/>code<sp/>unit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(crlf_is_newline<sp/>&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>CRLF<sp/>is<sp/>newline<sp/>&amp;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_offset<sp/>&lt;<sp/>subject_length<sp/>-<sp/>1<sp/>&amp;&amp;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>are<sp/>at<sp/>CRLF,<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subject[start_offset]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subject[start_offset<sp/>+<sp/>1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ovector[1]<sp/>+=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Advance<sp/>by<sp/>one<sp/>more.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Otherwise,<sp/>ensure<sp/>we<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>a<sp/>whole<sp/>UTF-8<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ovector[1]<sp/>&lt;<sp/>subject_length)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>character.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((subject[ovector[1]]<sp/>&amp;<sp/>0xc0)<sp/>!=<sp/>0x80)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ovector[1]<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Go<sp/>round<sp/>the<sp/>loop<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Other<sp/>matching<sp/>errors<sp/>are<sp/>not<sp/>recoverable.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Matching<sp/>error<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>rc);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>pcre2_match_data_free(match_data);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>pcre2_code_free(re);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Match<sp/>succeded<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nMatch<sp/>succeeded<sp/>again<sp/>at<sp/>offset<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)ovector[0]);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>match<sp/>succeeded,<sp/>but<sp/>the<sp/>output<sp/>vector<sp/>wasn&apos;t<sp/>big<sp/>enough.<sp/>This</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/><sp/>should<sp/>not<sp/>happen.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ovector<sp/>was<sp/>not<sp/>big<sp/>enough<sp/>for<sp/>all<sp/>the<sp/>captured<sp/>substrings\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>As<sp/>before,<sp/>show<sp/>substrings<sp/>stored<sp/>in<sp/>the<sp/>output<sp/>vector<sp/>by<sp/>number,<sp/>and<sp/>then</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/><sp/>also<sp/>any<sp/>named<sp/>substrings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rc;<sp/>i++)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>PCRE2_SPTR<sp/>substring_start<sp/>=<sp/>subject<sp/>+<sp/>ovector[2*i];</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>substring_length<sp/>=<sp/>ovector[2*i+1]<sp/>-<sp/>ovector[2*i];</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%2d:<sp/>%.*s\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)substring_length,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)substring_start);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(namecount<sp/>&lt;=<sp/>0)<sp/>printf(</highlight><highlight class="stringliteral">&quot;No<sp/>named<sp/>substrings\n&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>PCRE2_SPTR<sp/>tabptr<sp/>=<sp/>name_table;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Named<sp/>substrings\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>namecount;<sp/>i++)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>(tabptr[0]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>tabptr[1];</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;(%d)<sp/>%*s:<sp/>%.*s\n&quot;</highlight><highlight class="normal">,<sp/>n,<sp/>name_entry_size<sp/>-<sp/>3,<sp/>tabptr<sp/>+<sp/>2,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(ovector[2*n+1]<sp/>-<sp/>ovector[2*n]),<sp/>subject<sp/>+<sp/>ovector[2*n]);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tabptr<sp/>+=<sp/>name_entry_size;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>loop<sp/>to<sp/>find<sp/>second<sp/>and<sp/>subsequent<sp/>matches<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal">printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal">pcre2_match_data_free(match_data);</highlight></codeline>
<codeline lineno="419"><highlight class="normal">pcre2_code_free(re);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/pcre2_match.cpp"/>
  </compounddef>
</doxygen>
