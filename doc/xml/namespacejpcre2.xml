<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespacejpcre2" kind="namespace" language="C++">
    <compoundname>jpcre2</compoundname>
    <innerclass refid="classjpcre2_1_1Regex" prot="public">jpcre2::Regex</innerclass>
    <innerclass refid="classjpcre2_1_1RegexMatch" prot="public">jpcre2::RegexMatch</innerclass>
    <innerclass refid="classjpcre2_1_1RegexReplace" prot="public">jpcre2::RegexReplace</innerclass>
    <innernamespace refid="namespacejpcre2_1_1ERROR">jpcre2::ERROR</innernamespace>
    <innernamespace refid="namespacejpcre2_1_1utils">jpcre2::utils</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacejpcre2_1a85c143271501e383843f45b9999c2f00" prot="public" static="no">
        <name>@0</name>
        <enumvalue id="namespacejpcre2_1a85c143271501e383843f45b9999c2f00aecf4a781b081ff541006fbe84e143fb9" prot="public">
          <name>NONE</name>
          <initializer>= 0x0000000u</initializer>
          <briefdescription>
<para>Option 0 (zero) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacejpcre2_1a85c143271501e383843f45b9999c2f00a9124b768bcae4d51430aa7f26126f387" prot="public">
          <name>VALIDATE_MODIFIER</name>
          <initializer>= 0x0000001u</initializer>
          <briefdescription>
<para>Perform validation check on modifiers and throw #INVALID_MODIFIER if any wrong modifier is passed. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacejpcre2_1a85c143271501e383843f45b9999c2f00af29fccdb263520155e9c25a826a7200c" prot="public">
          <name>FIND_ALL</name>
          <initializer>= 0x0000002u</initializer>
          <briefdescription>
<para>Find all during match (global match) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacejpcre2_1a85c143271501e383843f45b9999c2f00a5e8bab7c478015b19baf3e84ed00876e" prot="public">
          <name>JIT_COMPILE</name>
          <initializer>= 0x0000004u</initializer>
          <briefdescription>
<para>Perform JIT compilation for optimization. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacejpcre2_1a85c143271501e383843f45b9999c2f00a6fec35fc9fdd8a606bed430c1816c552" prot="public">
          <name>ERROR_ALL</name>
          <initializer>= 0x0000008u</initializer>
          <briefdescription>
<para>Treat warnings as error and throw exception (warnings don&apos;t throw exception) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>These constants provide JPCRE2 options. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="103" column="1" bodyfile="src/jpcre2.hpp" bodystart="103" bodyend="109"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacejpcre2_1a2aac465ddcb123560c7c8215dd69246c" prot="public" static="no">
        <type>std::size_t</type>
        <definition>typedef std::size_t jpcre2::SIZE_T</definition>
        <argsstring></argsstring>
        <name>SIZE_T</name>
        <briefdescription>
<para>Used for match count and vector size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="71" column="1" bodyfile="src/jpcre2.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejpcre2_1a078242d38221a13fb3543b9edd78c099" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t jpcre2::Uint</definition>
        <argsstring></argsstring>
        <name>Uint</name>
        <briefdescription>
<para>Used for options (bitwise operation) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="72" column="1" bodyfile="src/jpcre2.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejpcre2_1a91f03070152fb228bc116c5a737f1d16" prot="public" static="no">
        <type>std::string</type>
        <definition>typedef std::string jpcre2::String</definition>
        <argsstring></argsstring>
        <name>String</name>
        <briefdescription>
<para>Used as std::string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="73" column="1" bodyfile="src/jpcre2.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejpcre2_1a20bd901c9ca3c949806aa6b9e324f6cf" prot="public" static="no">
        <type>std::map&lt; <ref refid="namespacejpcre2_1a91f03070152fb228bc116c5a737f1d16" kindref="member">String</ref>, <ref refid="namespacejpcre2_1a91f03070152fb228bc116c5a737f1d16" kindref="member">String</ref> &gt;</type>
        <definition>typedef std::map&lt;String, String&gt; jpcre2::MapNas</definition>
        <argsstring></argsstring>
        <name>MapNas</name>
        <briefdescription>
<para>Map for Named substrings. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="74" column="1" bodyfile="src/jpcre2.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejpcre2_1a947e37f0e4a1678157e7f1f855638e82" prot="public" static="no">
        <type>std::map&lt; <ref refid="namespacejpcre2_1a2aac465ddcb123560c7c8215dd69246c" kindref="member">SIZE_T</ref>, <ref refid="namespacejpcre2_1a91f03070152fb228bc116c5a737f1d16" kindref="member">String</ref> &gt;</type>
        <definition>typedef std::map&lt;SIZE_T, String&gt; jpcre2::MapNum</definition>
        <argsstring></argsstring>
        <name>MapNum</name>
        <briefdescription>
<para>Map for Numbered substrings. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="75" column="1" bodyfile="src/jpcre2.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejpcre2_1a753ebedfb8caf4a16ffbf47d8d705656" prot="public" static="no">
        <type>std::map&lt; <ref refid="namespacejpcre2_1a91f03070152fb228bc116c5a737f1d16" kindref="member">String</ref>, <ref refid="namespacejpcre2_1a2aac465ddcb123560c7c8215dd69246c" kindref="member">SIZE_T</ref> &gt;</type>
        <definition>typedef std::map&lt;String, SIZE_T&gt; jpcre2::MapNtN</definition>
        <argsstring></argsstring>
        <name>MapNtN</name>
        <briefdescription>
<para>Substring name to Substring number map. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="76" column="1" bodyfile="src/jpcre2.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejpcre2_1a09243236543ef477ff7f284c52656ef9" prot="public" static="no">
        <type><ref refid="namespacejpcre2_1a753ebedfb8caf4a16ffbf47d8d705656" kindref="member">MapNtN</ref></type>
        <definition>typedef MapNtN jpcre2::MapNtn</definition>
        <argsstring></argsstring>
        <name>MapNtn</name>
        <briefdescription>
<para>Allow spelling mistake of MapNtN as MapNtn. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="77" column="1" bodyfile="src/jpcre2.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejpcre2_1a2b121ae776ea5b2913839f418a7d856b" prot="public" static="no">
        <type>std::vector&lt; <ref refid="namespacejpcre2_1a20bd901c9ca3c949806aa6b9e324f6cf" kindref="member">MapNas</ref> &gt;</type>
        <definition>typedef std::vector&lt;MapNas&gt; jpcre2::VecNas</definition>
        <argsstring></argsstring>
        <name>VecNas</name>
        <briefdescription>
<para>Vector of matches with named substrings. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="78" column="1" bodyfile="src/jpcre2.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejpcre2_1a88a7aaf84cad627d34c8152e726168eb" prot="public" static="no">
        <type>std::vector&lt; <ref refid="namespacejpcre2_1a753ebedfb8caf4a16ffbf47d8d705656" kindref="member">MapNtN</ref> &gt;</type>
        <definition>typedef std::vector&lt;MapNtN&gt; jpcre2::VecNtN</definition>
        <argsstring></argsstring>
        <name>VecNtN</name>
        <briefdescription>
<para>Vector of substring name to Substring number map. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="79" column="1" bodyfile="src/jpcre2.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejpcre2_1a8d6b7b4c873bc7cb4626f950d2b40f9d" prot="public" static="no">
        <type><ref refid="namespacejpcre2_1a88a7aaf84cad627d34c8152e726168eb" kindref="member">VecNtN</ref></type>
        <definition>typedef VecNtN jpcre2::VecNtn</definition>
        <argsstring></argsstring>
        <name>VecNtn</name>
        <briefdescription>
<para>Allow spelling mistake of VecNtN as VecNtn. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="80" column="1" bodyfile="src/jpcre2.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacejpcre2_1ac1cf752c8fbb0be78020be3b80e77ce3" prot="public" static="no">
        <type>std::vector&lt; <ref refid="namespacejpcre2_1a947e37f0e4a1678157e7f1f855638e82" kindref="member">MapNum</ref> &gt;</type>
        <definition>typedef std::vector&lt;MapNum&gt; jpcre2::VecNum</definition>
        <argsstring></argsstring>
        <name>VecNum</name>
        <briefdescription>
<para>Vector of matches with numbered substrings. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="81" column="1" bodyfile="src/jpcre2.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacejpcre2_1a80cb201f2e733137b22a8ed98465096a" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacejpcre2_1a2aac465ddcb123560c7c8215dd69246c" kindref="member">SIZE_T</ref></type>
        <definition>const jpcre2::SIZE_T jpcre2::SUBSTITUTE_RESULT_INIT_SIZE</definition>
        <argsstring></argsstring>
        <name>SUBSTITUTE_RESULT_INIT_SIZE</name>
        <initializer>= std::numeric_limits&lt;int&gt;::max()</initializer>
        <briefdescription>
<para>Used by default to provide big enough initial buffer for replaced string. </para>        </briefdescription>
        <detaileddescription>
<para>Use max of int as the initial size of replaced string.</para><para><simplesect kind="author"><para><ulink url="https://github.com/neurobin">Md Jahidul Hamid</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="96" column="1" bodyfile="src/jpcre2.cpp" bodystart="49" bodyend="-1"/>
        <referencedby refid="classjpcre2_1_1RegexReplace_1a462810e8fc902f09e475a164e81cc5f5" compoundref="jpcre2_8hpp" startline="328" endline="331">jpcre2::RegexReplace::init_vars</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacejpcre2_1ad2236dcdcc14d580724b256ce7f168e5" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacejpcre2_1a91f03070152fb228bc116c5a737f1d16" kindref="member">String</ref></type>
        <definition>const jpcre2::String jpcre2::LOCALE_NONE</definition>
        <argsstring></argsstring>
        <name>LOCALE_NONE</name>
        <initializer>= &quot;JPCRE2_NONE&quot;</initializer>
        <briefdescription>
<para>Don&apos;t do anything about locale if it is set to <ref refid="namespacejpcre2_1ad2236dcdcc14d580724b256ce7f168e5" kindref="member">LOCALE_NONE</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Nothing to be done on locale. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="97" column="1" bodyfile="src/jpcre2.cpp" bodystart="50" bodyend="-1"/>
        <referencedby refid="classjpcre2_1_1Regex_1aad1d5ef1e87f762f68a587eec4022e69" compoundref="jpcre2_8cpp" startline="193" endline="239">jpcre2::Regex::compile</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacejpcre2_1adfdd3d1fff99e685734ae4e59771e84d" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacejpcre2_1a91f03070152fb228bc116c5a737f1d16" kindref="member">String</ref></type>
        <definition>const jpcre2::String jpcre2::LOCALE_DEFAULT</definition>
        <argsstring></argsstring>
        <name>LOCALE_DEFAULT</name>
        <initializer>= <ref refid="namespacejpcre2_1ad2236dcdcc14d580724b256ce7f168e5" kindref="member">LOCALE_NONE</ref></initializer>
        <briefdescription>
<para>Default locale. </para>        </briefdescription>
        <detaileddescription>
<para>Default local to be used. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="98" column="1" bodyfile="src/jpcre2.cpp" bodystart="51" bodyend="-1"/>
        <referencedby refid="classjpcre2_1_1Regex_1aff1f5cd95b6ac227014e7a5265a50cc0" compoundref="jpcre2_8hpp" startline="479" endline="488">jpcre2::Regex::init_vars</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacejpcre2_1abf6c3bff9268a572c299958d334ff26e" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacejpcre2_1a91f03070152fb228bc116c5a737f1d16" kindref="member">String</ref></type>
        <definition>const jpcre2::String jpcre2::JIT_ERROR_MESSAGE_PREFIX</definition>
        <argsstring></argsstring>
        <name>JIT_ERROR_MESSAGE_PREFIX</name>
        <initializer>= &quot;JIT compilation failed! &quot;</initializer>
        <briefdescription>
<para>Prefix to be added to JIT error message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="99" column="1" bodyfile="src/jpcre2.cpp" bodystart="52" bodyend="-1"/>
        <referencedby refid="classjpcre2_1_1Regex_1a92b75c438ccff871205b2175a6141fd5" compoundref="jpcre2_8cpp" startline="93" endline="103">jpcre2::Regex::getErrorMessage</referencedby>
        <referencedby refid="classjpcre2_1_1Regex_1acaa5da5fc3ad903e3ecc724750214e07" compoundref="jpcre2_8cpp" startline="105" endline="137">jpcre2::Regex::deepCopy</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Top level namespace of JPCRE2. </para>    </briefdescription>
    <detaileddescription>
<para>All functions, classes, constants, enums that are provided by JPCRE2 belong to this namespace while <bold>PCRE2</bold> functions, constants remain outside of its scope.</para><para>If you want to use any PCRE2 functions or constants, remember that they are in the global scope and should be used as such. </para>    </detaileddescription>
    <location file="src/jpcre2.hpp" line="69" column="1"/>
  </compounddef>
</doxygen>
