<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classjpcre2_1_1RegexMatch" kind="class" language="C++" prot="public">
    <compoundname>jpcre2::RegexMatch</compoundname>
    <includes refid="jpcre2_8hpp" local="no">jpcre2.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classjpcre2_1_1RegexMatch_1a7743b27db00c1e13d8fee51b70d5a133" prot="private" static="no" mutable="no">
        <type><ref refid="classjpcre2_1_1Regex" kindref="compound">Regex</ref> *</type>
        <definition>Regex* jpcre2::RegexMatch::re</definition>
        <argsstring></argsstring>
        <name>re</name>
        <briefdescription>
<para>This is used to access private members in <ref refid="classjpcre2_1_1Regex" kindref="compound">Regex</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="259" column="1" bodyfile="src/jpcre2.hpp" bodystart="259" bodyend="-1"/>
        <referencedby refid="classjpcre2_1_1Regex_1ab93775a93a0a537d09b9e9ab4a5a3894" compoundref="jpcre2_8hpp" startline="1101" endline="1107">jpcre2::Regex::match</referencedby>
        <referencedby refid="classjpcre2_1_1Regex_1a519b0915bf1163c6ce6a4d674b30cfcd" compoundref="jpcre2_8hpp" startline="1133" endline="1139">jpcre2::Regex::initMatch</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classjpcre2_1_1RegexMatch_1a9df4f1897e7fa33e05a9f6f938992ca7" prot="private" static="no" mutable="no">
        <type><ref refid="namespacejpcre2_1a91f03070152fb228bc116c5a737f1d16" kindref="member">String</ref></type>
        <definition>String jpcre2::RegexMatch::m_subject</definition>
        <argsstring></argsstring>
        <name>m_subject</name>
        <briefdescription>
<para>Subject string for match. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="261" column="1" bodyfile="src/jpcre2.hpp" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classjpcre2_1_1RegexMatch_1a697d5731007350b0f20d2018fcfafa90" prot="private" static="no" mutable="no">
        <type><ref refid="namespacejpcre2_1a078242d38221a13fb3543b9edd78c099" kindref="member">Uint</ref></type>
        <definition>Uint jpcre2::RegexMatch::match_opts</definition>
        <argsstring></argsstring>
        <name>match_opts</name>
        <briefdescription>
<para>PCRE2 options for pcre2_match() (PCRE2 internal function) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="262" column="1" bodyfile="src/jpcre2.hpp" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classjpcre2_1_1RegexMatch_1a70d62df887eeed237724f64fbc378700" prot="private" static="no" mutable="no">
        <type><ref refid="namespacejpcre2_1a078242d38221a13fb3543b9edd78c099" kindref="member">Uint</ref></type>
        <definition>Uint jpcre2::RegexMatch::jpcre2_match_opts</definition>
        <argsstring></argsstring>
        <name>jpcre2_match_opts</name>
        <briefdescription>
<para>JPCRE2 options for match. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="263" column="1" bodyfile="src/jpcre2.hpp" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classjpcre2_1_1RegexMatch_1a836705e0444568c78abaab4c8e351335" prot="private" static="no" mutable="no">
        <type><ref refid="namespacejpcre2_1ac1cf752c8fbb0be78020be3b80e77ce3" kindref="member">VecNum</ref> *</type>
        <definition>VecNum* jpcre2::RegexMatch::vec_num</definition>
        <argsstring></argsstring>
        <name>vec_num</name>
        <briefdescription>
<para>Pointer to vector that will store the numbered substring maps. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="265" column="1" bodyfile="src/jpcre2.hpp" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classjpcre2_1_1RegexMatch_1a812b57dc08fdc0caa93a1b508ef8242c" prot="private" static="no" mutable="no">
        <type><ref refid="namespacejpcre2_1a2b121ae776ea5b2913839f418a7d856b" kindref="member">VecNas</ref> *</type>
        <definition>VecNas* jpcre2::RegexMatch::vec_nas</definition>
        <argsstring></argsstring>
        <name>vec_nas</name>
        <briefdescription>
<para>Pointer to vector that will store the named substring maps. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="266" column="1" bodyfile="src/jpcre2.hpp" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classjpcre2_1_1RegexMatch_1a86ef413ab6d237972af858be26ff77f7" prot="private" static="no" mutable="no">
        <type><ref refid="namespacejpcre2_1a88a7aaf84cad627d34c8152e726168eb" kindref="member">VecNtN</ref> *</type>
        <definition>VecNtN* jpcre2::RegexMatch::vec_ntn</definition>
        <argsstring></argsstring>
        <name>vec_ntn</name>
        <briefdescription>
<para>Pointer to vector that will store the name to number maps. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="267" column="1" bodyfile="src/jpcre2.hpp" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classjpcre2_1_1RegexMatch_1a94ad930ea8cb22873737fda344bae508" prot="private" static="no" mutable="no">
        <type><ref refid="namespacejpcre2_1a947e37f0e4a1678157e7f1f855638e82" kindref="member">MapNum</ref> *</type>
        <definition>MapNum* jpcre2::RegexMatch::num_map0</definition>
        <argsstring></argsstring>
        <name>num_map0</name>
        <briefdescription>
<para>Pointer to map that will store numbered substrings temporarily. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="269" column="1" bodyfile="src/jpcre2.hpp" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classjpcre2_1_1RegexMatch_1a36749947847f266de03c3991ac88a694" prot="private" static="no" mutable="no">
        <type><ref refid="namespacejpcre2_1a20bd901c9ca3c949806aa6b9e324f6cf" kindref="member">MapNas</ref> *</type>
        <definition>MapNas* jpcre2::RegexMatch::nas_map0</definition>
        <argsstring></argsstring>
        <name>nas_map0</name>
        <briefdescription>
<para>Pointer to map that will store named substrings temporarily. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="270" column="1" bodyfile="src/jpcre2.hpp" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classjpcre2_1_1RegexMatch_1a1c790683d023313967ce80db6045419f" prot="private" static="no" mutable="no">
        <type><ref refid="namespacejpcre2_1a753ebedfb8caf4a16ffbf47d8d705656" kindref="member">MapNtN</ref> *</type>
        <definition>MapNtN* jpcre2::RegexMatch::ntn_map0</definition>
        <argsstring></argsstring>
        <name>ntn_map0</name>
        <briefdescription>
<para>Pointer to map that will store name to number mapping temporarily. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="271" column="1" bodyfile="src/jpcre2.hpp" bodystart="271" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classjpcre2_1_1RegexMatch_1a1f6f7620b7d2218c6c2a6a47f432ea6a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Regex</definition>
        <argsstring></argsstring>
        <name>Regex</name>
        <briefdescription>
<para>Define class <ref refid="classjpcre2_1_1Regex" kindref="compound">Regex</ref> as friend and thus allow <ref refid="classjpcre2_1_1Regex" kindref="compound">Regex</ref> to create object of this class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="322" column="1" bodyfile="src/jpcre2.hpp" bodystart="322" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classjpcre2_1_1RegexMatch_1a82bfef9700b1c62b84e4a32ee4b0731e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jpcre2::RegexMatch::getNumberedSubstrings</definition>
        <argsstring>(int, pcre2_match_data *)</argsstring>
        <name>getNumberedSubstrings</name>
        <param>
          <type>int</type>
          <defname>rc</defname>
        </param>
        <param>
          <type>pcre2_match_data *</type>
          <defname>match_data</defname>
        </param>
        <briefdescription>
<para>Populate <ref refid="classjpcre2_1_1RegexMatch_1a94ad930ea8cb22873737fda344bae508" kindref="member">num_map0</ref> with numbered substrings. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classjpcre2_1_1Except" kindref="compound">jpcre2::Except</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Throws exception with PCRE2 error number and error offset. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rc</parametername>
</parameternamelist>
<parameterdescription>
<para>Return value from pcre2_match() </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>match_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pcre2 match data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="273" column="1" bodyfile="src/jpcre2.cpp" bodystart="532" bodyend="558"/>
        <references refid="namespacejpcre2_1_1utils_1a71c7842918bdcc6936266813981492dc" compoundref="jpcre2_8cpp" startline="190" endline="192">jpcre2::utils::throwException</references>
        <references refid="namespacejpcre2_1_1utils_1a3603a3493202e7408e18fd0a912bf725" compoundref="jpcre2_8cpp" startline="139" endline="147">jpcre2::utils::toString</references>
      </memberdef>
      <memberdef kind="function" id="classjpcre2_1_1RegexMatch_1ac494245673c474d518e8ae47b2ab9db9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jpcre2::RegexMatch::getNamedSubstrings</definition>
        <argsstring>(int, int, PCRE2_SPTR, pcre2_match_data *)</argsstring>
        <name>getNamedSubstrings</name>
        <param>
          <type>int</type>
          <defname>namecount</defname>
        </param>
        <param>
          <type>int</type>
          <defname>name_entry_size</defname>
        </param>
        <param>
          <type>PCRE2_SPTR</type>
          <defname>tabptr</defname>
        </param>
        <param>
          <type>pcre2_match_data *</type>
          <defname>match_data</defname>
        </param>
        <briefdescription>
<para>Populate <ref refid="classjpcre2_1_1RegexMatch_1a36749947847f266de03c3991ac88a694" kindref="member">nas_map0</ref> and/or <ref refid="classjpcre2_1_1RegexMatch_1a1c790683d023313967ce80db6045419f" kindref="member">ntn_map0</ref> with named substring and/or name to number mapping. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classjpcre2_1_1Except" kindref="compound">jpcre2::Except</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Throws exception with PCRE2 error number and error offset. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>namecount</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of capture group name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name_entry_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of each entry in the name table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tabptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to name table </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>match_data</parametername>
</parameternamelist>
<parameterdescription>
<para>PCRE2 match data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="275" column="1" bodyfile="src/jpcre2.cpp" bodystart="565" bodyend="627"/>
        <references refid="namespacejpcre2_1_1utils_1a71c7842918bdcc6936266813981492dc" compoundref="jpcre2_8cpp" startline="190" endline="192">jpcre2::utils::throwException</references>
        <references refid="namespacejpcre2_1_1utils_1a3603a3493202e7408e18fd0a912bf725" compoundref="jpcre2_8cpp" startline="139" endline="147">jpcre2::utils::toString</references>
      </memberdef>
      <memberdef kind="function" id="classjpcre2_1_1RegexMatch_1aeeffc8edc43a8e5d1d24ae4055213730" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void jpcre2::RegexMatch::pushMapsIntoVectors</definition>
        <argsstring>(void)</argsstring>
        <name>pushMapsIntoVectors</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Push maps into the vectors pointed by <ref refid="classjpcre2_1_1RegexMatch_1a836705e0444568c78abaab4c8e351335" kindref="member">vec_num</ref>, <ref refid="classjpcre2_1_1RegexMatch_1a812b57dc08fdc0caa93a1b508ef8242c" kindref="member">vec_nas</ref> and <ref refid="classjpcre2_1_1RegexMatch_1a86ef413ab6d237972af858be26ff77f7" kindref="member">vec_ntn</ref> and thus store match results in them. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="279" column="1" bodyfile="src/jpcre2.hpp" bodystart="279" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classjpcre2_1_1RegexMatch_1a3da6a2319cd577d7f2f10c66dcf59a99" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void jpcre2::RegexMatch::init_vars</definition>
        <argsstring>()</argsstring>
        <name>init_vars</name>
        <briefdescription>
<para>Initialize class variables. </para>        </briefdescription>
        <detaileddescription>
<para>Do not call this without releasing vector/map memory. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="290" column="1" bodyfile="src/jpcre2.hpp" bodystart="290" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classjpcre2_1_1RegexMatch_1a40127e5057e2343848d8c8a6d4c32bcd" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>jpcre2::RegexMatch::RegexMatch</definition>
        <argsstring>()</argsstring>
        <name>RegexMatch</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Initialize class variables. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="303" column="1" bodyfile="src/jpcre2.hpp" bodystart="303" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classjpcre2_1_1RegexMatch_1a098ddb46b2f297870ea548ef07597d94" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>jpcre2::RegexMatch::RegexMatch</definition>
        <argsstring>(const RegexMatch &amp;)</argsstring>
        <name>RegexMatch</name>
        <param>
          <type>const <ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref> &amp;</type>
        </param>
        <briefdescription>
<para>This is a copy constructor which is only used to prevent public object creation. </para>        </briefdescription>
        <detaileddescription>
<para>No need to implement it completely. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="309" column="1" bodyfile="src/jpcre2.hpp" bodystart="309" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classjpcre2_1_1RegexMatch_1ab6a9f9b8404852e46edd08a5b8712847" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>jpcre2::RegexMatch::~RegexMatch</definition>
        <argsstring>()</argsstring>
        <name>~RegexMatch</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
<para>Deletes the temporary maps that were created to store substrings </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="315" column="1" bodyfile="src/jpcre2.hpp" bodystart="315" bodyend="319"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classjpcre2_1_1RegexMatch_1a2c7efe1ec2e13827f670db4ecedcd0a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref> &amp;</type>
        <definition>RegexMatch&amp; jpcre2::RegexMatch::setNumberedSubstringVector</definition>
        <argsstring>(VecNum *v)</argsstring>
        <name>setNumberedSubstringVector</name>
        <param>
          <type><ref refid="namespacejpcre2_1ac1cf752c8fbb0be78020be3b80e77ce3" kindref="member">VecNum</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Set a pointer to the numbered substring vector of type <ref refid="namespacejpcre2_1ac1cf752c8fbb0be78020be3b80e77ce3" kindref="member">jpcre2::VecNum</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classjpcre2_1_1RegexMatch_1a836705e0444568c78abaab4c8e351335" kindref="member">vec_num</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref>&amp; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="329" column="1" bodyfile="src/jpcre2.hpp" bodystart="329" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classjpcre2_1_1RegexMatch_1ae495431f57cae54363331237ab21b56c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref> &amp;</type>
        <definition>RegexMatch&amp; jpcre2::RegexMatch::setNamedSubstringVector</definition>
        <argsstring>(VecNas *v)</argsstring>
        <name>setNamedSubstringVector</name>
        <param>
          <type><ref refid="namespacejpcre2_1a2b121ae776ea5b2913839f418a7d856b" kindref="member">VecNas</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Set a pointer to the named substring vector of type <ref refid="namespacejpcre2_1a2b121ae776ea5b2913839f418a7d856b" kindref="member">jpcre2::VecNas</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classjpcre2_1_1RegexMatch_1a812b57dc08fdc0caa93a1b508ef8242c" kindref="member">vec_nas</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref>&amp; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="337" column="1" bodyfile="src/jpcre2.hpp" bodystart="337" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="classjpcre2_1_1RegexMatch_1a04926e61d8b5f1d8bdf344efecd567d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref> &amp;</type>
        <definition>RegexMatch&amp; jpcre2::RegexMatch::setNameToNumberMapVector</definition>
        <argsstring>(VecNtN *v)</argsstring>
        <name>setNameToNumberMapVector</name>
        <param>
          <type><ref refid="namespacejpcre2_1a88a7aaf84cad627d34c8152e726168eb" kindref="member">VecNtN</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Set a pointer to the name to number map vector of type <ref refid="namespacejpcre2_1a88a7aaf84cad627d34c8152e726168eb" kindref="member">jpcre2::VecNtN</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classjpcre2_1_1RegexMatch_1a86ef413ab6d237972af858be26ff77f7" kindref="member">vec_ntn</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref>&amp; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="345" column="1" bodyfile="src/jpcre2.hpp" bodystart="345" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="classjpcre2_1_1RegexMatch_1a635c652195deaa8ebb9e107c4f972aab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref> &amp;</type>
        <definition>RegexMatch&amp; jpcre2::RegexMatch::setSubject</definition>
        <argsstring>(const String &amp;s)</argsstring>
        <name>setSubject</name>
        <param>
          <type>const <ref refid="namespacejpcre2_1a91f03070152fb228bc116c5a737f1d16" kindref="member">String</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Set the subject string <ref refid="classjpcre2_1_1RegexMatch_1a9df4f1897e7fa33e05a9f6f938992ca7" kindref="member">m_subject</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>Subject string </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref>&amp; </para></simplesect>
<simplesect kind="see"><para><ref refid="classjpcre2_1_1RegexReplace_1a46eefdb105827920bebc8436721fa4cb" kindref="member">RegexReplace::setSubject()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="354" column="1" bodyfile="src/jpcre2.hpp" bodystart="354" bodyend="357"/>
        <referencedby refid="classjpcre2_1_1Regex_1ab93775a93a0a537d09b9e9ab4a5a3894" compoundref="jpcre2_8hpp" startline="1101" endline="1107">jpcre2::Regex::match</referencedby>
      </memberdef>
      <memberdef kind="function" id="classjpcre2_1_1RegexMatch_1a9df7e92f96b61553f62720cb8f5f23e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref> &amp;</type>
        <definition>RegexMatch&amp; jpcre2::RegexMatch::setModifier</definition>
        <argsstring>(const String &amp;s)</argsstring>
        <name>setModifier</name>
        <param>
          <type>const <ref refid="namespacejpcre2_1a91f03070152fb228bc116c5a737f1d16" kindref="member">String</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Set the modifier (overwrites existing JPCRE2 and PCRE2 option). </para>        </briefdescription>
        <detaileddescription>
<para>Re-initializes the option bits for PCRE2 and JPCRE2 options, then parses the modifier to set their equivalent options.</para><para><bold>Note:</bold> If speed of operation is very crucial, use <ref refid="classjpcre2_1_1RegexMatch_1a0d76033d9c134caa9ddfc21849603920" kindref="member">RegexMatch::setJpcre2Option()</ref> and <ref refid="classjpcre2_1_1RegexMatch_1ae4ab558c2bec0bc9639dbca70ab47496" kindref="member">RegexMatch::setPcre2Option()</ref> with equivalent options. It will be faster that way. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classjpcre2_1_1Except" kindref="compound">jpcre2::Except</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Throws exception with <ref refid="namespacejpcre2_1_1ERROR_1a4b2998984439438fa9da8d7043909bc2a4115340549b623f4e2da285bf0aa9bff" kindref="member">ERROR::INVALID_MODIFIER</ref> as error number if <ref refid="namespacejpcre2_1a85c143271501e383843f45b9999c2f00a9124b768bcae4d51430aa7f26126f387" kindref="member">jpcre2::VALIDATE_MODIFIER</ref> or <ref refid="namespacejpcre2_1a85c143271501e383843f45b9999c2f00a6fec35fc9fdd8a606bed430c1816c552" kindref="member">jpcre2::ERROR_ALL</ref> is set and a wrong modifier was encountered. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>Modifier string </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref>&amp; </para></simplesect>
<simplesect kind="see"><para><ref refid="classjpcre2_1_1RegexReplace_1ae2abe2994b0fbe54950f88e63000c910" kindref="member">RegexReplace::setModifier()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classjpcre2_1_1Regex_1aed9865b58c60945e19f36fa310f5a595" kindref="member">Regex::setModifier()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="370" column="1" bodyfile="src/jpcre2.hpp" bodystart="370" bodyend="375"/>
        <referencedby refid="classjpcre2_1_1Regex_1ab93775a93a0a537d09b9e9ab4a5a3894" compoundref="jpcre2_8hpp" startline="1101" endline="1107">jpcre2::Regex::match</referencedby>
      </memberdef>
      <memberdef kind="function" id="classjpcre2_1_1RegexMatch_1a0d76033d9c134caa9ddfc21849603920" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref> &amp;</type>
        <definition>RegexMatch&amp; jpcre2::RegexMatch::setJpcre2Option</definition>
        <argsstring>(Uint x)</argsstring>
        <name>setJpcre2Option</name>
        <param>
          <type><ref refid="namespacejpcre2_1a078242d38221a13fb3543b9edd78c099" kindref="member">Uint</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Set JPCRE2 option <ref refid="classjpcre2_1_1RegexMatch_1a70d62df887eeed237724f64fbc378700" kindref="member">jpcre2_match_opts</ref> (overwrite existing option) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Option value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref>&amp; </para></simplesect>
<simplesect kind="see"><para><ref refid="classjpcre2_1_1RegexReplace_1a745ab0b979035214a83ed0a04686ef6a" kindref="member">RegexReplace::setJpcre2Option()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classjpcre2_1_1Regex_1a031617a19638ef752dcd2b29fa3464d5" kindref="member">Regex::setJpcre2Option()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="382" column="1" bodyfile="src/jpcre2.hpp" bodystart="382" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="classjpcre2_1_1RegexMatch_1ae4ab558c2bec0bc9639dbca70ab47496" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref> &amp;</type>
        <definition>RegexMatch&amp; jpcre2::RegexMatch::setPcre2Option</definition>
        <argsstring>(Uint x)</argsstring>
        <name>setPcre2Option</name>
        <param>
          <type><ref refid="namespacejpcre2_1a078242d38221a13fb3543b9edd78c099" kindref="member">Uint</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Set PCRE2 option <ref refid="classjpcre2_1_1RegexMatch_1a697d5731007350b0f20d2018fcfafa90" kindref="member">match_opts</ref> (overwrite existing option) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Option value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref>&amp; </para></simplesect>
<simplesect kind="see"><para><ref refid="classjpcre2_1_1RegexReplace_1aec36272d351fdc3a8cb02a4a3efea5a2" kindref="member">RegexReplace::setPcre2Option()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classjpcre2_1_1Regex_1acdc6f97f4030ae109c4e1a4e2310bceb" kindref="member">Regex::setPcre2Option()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="392" column="1" bodyfile="src/jpcre2.hpp" bodystart="392" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="classjpcre2_1_1RegexMatch_1ae586d43ec197c57c66086eeb4f8d83a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref> &amp;</type>
        <definition>RegexMatch&amp; jpcre2::RegexMatch::setFindAll</definition>
        <argsstring>(bool x)</argsstring>
        <name>setFindAll</name>
        <param>
          <type>bool</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Set whether to perform global match. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>True or False </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref>&amp; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="400" column="1" bodyfile="src/jpcre2.hpp" bodystart="400" bodyend="406"/>
        <references refid="namespacejpcre2_1a85c143271501e383843f45b9999c2f00af29fccdb263520155e9c25a826a7200c" compoundref="jpcre2_8hpp" startline="160">jpcre2::FIND_ALL</references>
      </memberdef>
      <memberdef kind="function" id="classjpcre2_1_1RegexMatch_1a9e04456a81606362a2ecdf748912e3ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref> &amp;</type>
        <definition>RegexMatch&amp; jpcre2::RegexMatch::setFindAll</definition>
        <argsstring>()</argsstring>
        <name>setFindAll</name>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para><para>This function just calls <ref refid="classjpcre2_1_1RegexMatch_1ae586d43ec197c57c66086eeb4f8d83a1" kindref="member">RegexMatch::setFindAll(bool x)</ref> with <computeroutput>true</computeroutput> as the parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref>&amp; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="412" column="1" bodyfile="src/jpcre2.hpp" bodystart="412" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="classjpcre2_1_1RegexMatch_1a877be3123d789020d259939bc79e8cfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref> &amp;</type>
        <definition>jpcre2::RegexMatch &amp; jpcre2::RegexMatch::changeModifier</definition>
        <argsstring>(const String &amp;, bool)</argsstring>
        <name>changeModifier</name>
        <param>
          <type>const <ref refid="namespacejpcre2_1a91f03070152fb228bc116c5a737f1d16" kindref="member">String</ref> &amp;</type>
          <defname>mod</defname>
        </param>
        <param>
          <type>bool</type>
          <defname>x</defname>
        </param>
        <briefdescription>
<para>Parse modifier and add/remove equivalent PCRE2 and JPCRE2 options. </para>        </briefdescription>
        <detaileddescription>
<para>After a call to this function <ref refid="classjpcre2_1_1RegexMatch_1a697d5731007350b0f20d2018fcfafa90" kindref="member">match_opts</ref> and <ref refid="classjpcre2_1_1RegexMatch_1a70d62df887eeed237724f64fbc378700" kindref="member">jpcre2_match_opts</ref> will be properly set.</para><para>This function does not initialize or re-initialize options. If you want to set options from scratch, initialize them to their default values before calling this function.</para><para><bold>Note:</bold> If speed of operation is very crucial, use <ref refid="classjpcre2_1_1RegexMatch_1a154430c66b8794d6632be6211a3ce870" kindref="member">RegexMatch::changeJpcre2Option()</ref> and <ref refid="classjpcre2_1_1RegexMatch_1a6893abc21b24a9d9fca146a33c0f823c" kindref="member">RegexMatch::changePcre2Option()</ref> with equivalent options. It will be faster that way. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classjpcre2_1_1Except" kindref="compound">jpcre2::Except</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Throws exception with <ref refid="namespacejpcre2_1_1ERROR_1a4b2998984439438fa9da8d7043909bc2a4115340549b623f4e2da285bf0aa9bff" kindref="member">ERROR::INVALID_MODIFIER</ref> if <ref refid="namespacejpcre2_1a85c143271501e383843f45b9999c2f00a9124b768bcae4d51430aa7f26126f387" kindref="member">jpcre2::VALIDATE_MODIFIER</ref> or <ref refid="namespacejpcre2_1a85c143271501e383843f45b9999c2f00a6fec35fc9fdd8a606bed430c1816c552" kindref="member">jpcre2::ERROR_ALL</ref> was set and a wrong modifier was encountered. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>Modifier string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to add or remove options </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref>&amp; </para></simplesect>
<simplesect kind="see"><para><ref refid="classjpcre2_1_1RegexReplace_1a0a2dc39fc28e6f7fe0a5d638f5891bdb" kindref="member">RegexReplace::changeModifier()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classjpcre2_1_1Regex_1a9ab3efed9819a51225456e6d8487de56" kindref="member">Regex::changeModifier()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="417" column="1" bodyfile="src/jpcre2.cpp" bodystart="501" bodyend="527"/>
        <references refid="classjpcre2_1_1Regex_1ab8e0b1a49eeb1077ba54cf3b5292c95e" compoundref="jpcre2_8hpp" startline="977" endline="983">jpcre2::Regex::changeJpcre2Option</references>
        <references refid="classjpcre2_1_1Regex_1ae5bde8008cc5a700163ca3162dbd5823" compoundref="jpcre2_8hpp" startline="991" endline="997">jpcre2::Regex::changePcre2Option</references>
        <references refid="namespacejpcre2_1a85c143271501e383843f45b9999c2f00a6fec35fc9fdd8a606bed430c1816c552" compoundref="jpcre2_8hpp" startline="162">jpcre2::ERROR_ALL</references>
        <references refid="namespacejpcre2_1_1utils_1a58db3a9ce0296d70469611445cb42209" compoundref="jpcre2_8cpp" startline="172" endline="182">jpcre2::utils::getErrorMessage</references>
        <references refid="namespacejpcre2_1_1ERROR_1a4b2998984439438fa9da8d7043909bc2a4115340549b623f4e2da285bf0aa9bff" compoundref="jpcre2_8hpp" startline="108">jpcre2::ERROR::INVALID_MODIFIER</references>
        <references refid="namespacejpcre2_1_1MOD_1ae9029cd8600f49ba50ae0c7e42804a91">jpcre2::MOD::M_N</references>
        <references refid="namespacejpcre2_1_1MOD_1a7dd2150647fee002204e7005aa126289" compoundref="jpcre2_8cpp" startline="108">jpcre2::MOD::M_V</references>
        <references refid="namespacejpcre2_1_1MOD_1a079cc9fcb1e7eeab134b2146d4d67fe8">jpcre2::MOD::MJ_N</references>
        <references refid="namespacejpcre2_1_1MOD_1a02e60618af8087b9a99ae8fbed0b887c" compoundref="jpcre2_8cpp" startline="112">jpcre2::MOD::MJ_V</references>
        <references refid="namespacejpcre2_1_1utils_1a71c7842918bdcc6936266813981492dc" compoundref="jpcre2_8cpp" startline="190" endline="192">jpcre2::utils::throwException</references>
        <references refid="namespacejpcre2_1a85c143271501e383843f45b9999c2f00a9124b768bcae4d51430aa7f26126f387" compoundref="jpcre2_8hpp" startline="158">jpcre2::VALIDATE_MODIFIER</references>
      </memberdef>
      <memberdef kind="function" id="classjpcre2_1_1RegexMatch_1a154430c66b8794d6632be6211a3ce870" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref> &amp;</type>
        <definition>RegexMatch&amp; jpcre2::RegexMatch::changeJpcre2Option</definition>
        <argsstring>(Uint opt, bool x)</argsstring>
        <name>changeJpcre2Option</name>
        <param>
          <type><ref refid="namespacejpcre2_1a078242d38221a13fb3543b9edd78c099" kindref="member">Uint</ref></type>
          <declname>opt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Add or remove a JPCRE2 option. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>opt</parametername>
</parameternamelist>
<parameterdescription>
<para>JPCRE2 option value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Add the option if it&apos;s true, remove otherwise. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classjpcre2_1_1Regex" kindref="compound">Regex</ref>&amp; </para></simplesect>
<simplesect kind="see"><para><ref refid="classjpcre2_1_1RegexReplace_1afebf5e76bce8e312ab6dbdec3288b02b" kindref="member">RegexReplace::changeJpcre2Option()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classjpcre2_1_1Regex_1ab8e0b1a49eeb1077ba54cf3b5292c95e" kindref="member">Regex::changeJpcre2Option()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="425" column="1" bodyfile="src/jpcre2.hpp" bodystart="425" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="classjpcre2_1_1RegexMatch_1a6893abc21b24a9d9fca146a33c0f823c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref> &amp;</type>
        <definition>RegexMatch&amp; jpcre2::RegexMatch::changePcre2Option</definition>
        <argsstring>(Uint opt, bool x)</argsstring>
        <name>changePcre2Option</name>
        <param>
          <type><ref refid="namespacejpcre2_1a078242d38221a13fb3543b9edd78c099" kindref="member">Uint</ref></type>
          <declname>opt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Add or remove a PCRE2 option. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>opt</parametername>
</parameternamelist>
<parameterdescription>
<para>PCRE2 option value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Add the option if it&apos;s true, remove otherwise. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classjpcre2_1_1Regex" kindref="compound">Regex</ref>&amp; </para></simplesect>
<simplesect kind="see"><para><ref refid="classjpcre2_1_1RegexReplace_1aea15c694bba7d994f048596a1f90f71f" kindref="member">RegexReplace::changePcre2Option()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classjpcre2_1_1Regex_1ae5bde8008cc5a700163ca3162dbd5823" kindref="member">Regex::changePcre2Option()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="439" column="1" bodyfile="src/jpcre2.hpp" bodystart="439" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="classjpcre2_1_1RegexMatch_1a08c2e481fe8b9c001e67733fb4e33972" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref> &amp;</type>
        <definition>RegexMatch&amp; jpcre2::RegexMatch::addModifier</definition>
        <argsstring>(const String &amp;mod)</argsstring>
        <name>addModifier</name>
        <param>
          <type>const <ref refid="namespacejpcre2_1a91f03070152fb228bc116c5a737f1d16" kindref="member">String</ref> &amp;</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
<para>Parse modifier string and add equivalent PCRE2 and JPCRE2 options. </para>        </briefdescription>
        <detaileddescription>
<para>This is just a wrapper of the original function <ref refid="classjpcre2_1_1RegexMatch_1a877be3123d789020d259939bc79e8cfe" kindref="member">RegexMatch::changeModifier()</ref> provided for convenience.</para><para><bold>Note:</bold> If speed of operation is very crucial, use <ref refid="classjpcre2_1_1RegexMatch_1a0a4cf8554a7e00f3cf2db34f60a43f60" kindref="member">RegexMatch::addJpcre2Option()</ref> and <ref refid="classjpcre2_1_1RegexMatch_1aac4857cd8f5eae15b29b9afbe9023522" kindref="member">RegexMatch::addPcre2Option()</ref> with equivalent options. It will be faster that way. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classjpcre2_1_1Except" kindref="compound">jpcre2::Except</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Throws exception with <ref refid="namespacejpcre2_1_1ERROR_1a4b2998984439438fa9da8d7043909bc2a4115340549b623f4e2da285bf0aa9bff" kindref="member">ERROR::INVALID_MODIFIER</ref> as error number if <ref refid="namespacejpcre2_1a85c143271501e383843f45b9999c2f00a9124b768bcae4d51430aa7f26126f387" kindref="member">jpcre2::VALIDATE_MODIFIER</ref> or <ref refid="namespacejpcre2_1a85c143271501e383843f45b9999c2f00a6fec35fc9fdd8a606bed430c1816c552" kindref="member">jpcre2::ERROR_ALL</ref> is set and a wrong modifier was encountered. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>Modifier string </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref>&amp; </para></simplesect>
<simplesect kind="see"><para><ref refid="classjpcre2_1_1RegexReplace_1a06a57430f62058822d48722a2a6425d7" kindref="member">RegexReplace::addModifier()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classjpcre2_1_1Regex_1ab1af1471339602446d8221b8c97c6b55" kindref="member">Regex::addModifier()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="459" column="1" bodyfile="src/jpcre2.hpp" bodystart="459" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="classjpcre2_1_1RegexMatch_1a0a4cf8554a7e00f3cf2db34f60a43f60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref> &amp;</type>
        <definition>RegexMatch&amp; jpcre2::RegexMatch::addJpcre2Option</definition>
        <argsstring>(Uint x)</argsstring>
        <name>addJpcre2Option</name>
        <param>
          <type><ref refid="namespacejpcre2_1a078242d38221a13fb3543b9edd78c099" kindref="member">Uint</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Add option to existing JPCRE2 options <ref refid="classjpcre2_1_1RegexMatch_1a70d62df887eeed237724f64fbc378700" kindref="member">jpcre2_match_opts</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Option value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref>&amp; </para></simplesect>
<simplesect kind="see"><para><ref refid="classjpcre2_1_1RegexReplace_1a3f86b1e11d08d0153a08244771e59061" kindref="member">RegexReplace::addJpcre2Option()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classjpcre2_1_1Regex_1a03974fa7ba8f7c47186cb8d6f54934de" kindref="member">Regex::addJpcre2Option()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="468" column="1" bodyfile="src/jpcre2.hpp" bodystart="468" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="classjpcre2_1_1RegexMatch_1aac4857cd8f5eae15b29b9afbe9023522" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref> &amp;</type>
        <definition>RegexMatch&amp; jpcre2::RegexMatch::addPcre2Option</definition>
        <argsstring>(Uint x)</argsstring>
        <name>addPcre2Option</name>
        <param>
          <type><ref refid="namespacejpcre2_1a078242d38221a13fb3543b9edd78c099" kindref="member">Uint</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Add option to existing PCRE2 options <ref refid="classjpcre2_1_1RegexMatch_1a697d5731007350b0f20d2018fcfafa90" kindref="member">match_opts</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Option value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classjpcre2_1_1RegexMatch" kindref="compound">RegexMatch</ref>&amp; </para></simplesect>
<simplesect kind="see"><para><ref refid="classjpcre2_1_1RegexReplace_1a3cfd03568b23bebcbb530a2c120b5d33" kindref="member">RegexReplace::addPcre2Option()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="classjpcre2_1_1Regex_1a2c7dcf12f26b2b046e147b013c8b5087" kindref="member">Regex::addPcre2Option()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="478" column="1" bodyfile="src/jpcre2.hpp" bodystart="478" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="classjpcre2_1_1RegexMatch_1a5868aef3a146594ea1ebef34d122bb33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacejpcre2_1a2aac465ddcb123560c7c8215dd69246c" kindref="member">SIZE_T</ref></type>
        <definition>jpcre2::SIZE_T jpcre2::RegexMatch::match</definition>
        <argsstring>(void)</argsstring>
        <name>match</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Store match result in vectors and return the number of matches. </para>        </briefdescription>
        <detaileddescription>
<para>Clear the specified vectors (<ref refid="classjpcre2_1_1RegexMatch_1a836705e0444568c78abaab4c8e351335" kindref="member">vec_num</ref>, <ref refid="classjpcre2_1_1RegexMatch_1a812b57dc08fdc0caa93a1b508ef8242c" kindref="member">vec_nas</ref>, <ref refid="classjpcre2_1_1RegexMatch_1a86ef413ab6d237972af858be26ff77f7" kindref="member">vec_ntn</ref>) and re-fill them with match results, then return the match count.</para><para>The size of each vectors should be equal to the match count. The return value is guaranteed to give you the right match count.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classjpcre2_1_1Except" kindref="compound">jpcre2::Except</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Throws exception with PCRE2 error number and error offset. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of matches found </para></simplesect>
<simplesect kind="see"><para><ref refid="namespacejpcre2_1a2aac465ddcb123560c7c8215dd69246c" kindref="member">SIZE_T</ref> <ref refid="classjpcre2_1_1Regex_1a9ffbb6aa54cb97125f1b4211bc1d09a5" kindref="member">Regex::match(const String&amp; s)</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="namespacejpcre2_1a2aac465ddcb123560c7c8215dd69246c" kindref="member">SIZE_T</ref> <ref refid="classjpcre2_1_1Regex_1ab93775a93a0a537d09b9e9ab4a5a3894" kindref="member">Regex::match(const String&amp; s, const String&amp; mod)</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jpcre2.hpp" line="484" column="1" bodyfile="src/jpcre2.cpp" bodystart="640" bodyend="933"/>
        <references refid="namespacejpcre2_1a85c143271501e383843f45b9999c2f00af29fccdb263520155e9c25a826a7200c" compoundref="jpcre2_8hpp" startline="160">jpcre2::FIND_ALL</references>
        <references refid="namespacejpcre2_1_1utils_1a71c7842918bdcc6936266813981492dc" compoundref="jpcre2_8cpp" startline="190" endline="192">jpcre2::utils::throwException</references>
        <referencedby refid="classjpcre2_1_1Regex_1ab93775a93a0a537d09b9e9ab4a5a3894" compoundref="jpcre2_8hpp" startline="1101" endline="1107">jpcre2::Regex::match</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides the <ref refid="classjpcre2_1_1RegexMatch_1a5868aef3a146594ea1ebef34d122bb33" kindref="member">RegexMatch::match()</ref> function to perform regex matching. </para>    </briefdescription>
    <detaileddescription>
<para>Provides chained methods to set various options.</para><para>All constructors of this class are private. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="23">
        <label>jpcre2::RegexReplace</label>
        <link refid="classjpcre2_1_1RegexReplace"/>
        <childnode refid="22" relation="usage">
          <edgelabel>-re</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>jpcre2::Regex</label>
        <link refid="classjpcre2_1_1Regex"/>
        <childnode refid="21" relation="usage">
          <edgelabel>-rm</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>-rr</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>jpcre2::RegexMatch</label>
        <link refid="classjpcre2_1_1RegexMatch"/>
        <childnode refid="22" relation="usage">
          <edgelabel>-re</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/jpcre2.hpp" line="255" column="1" bodyfile="src/jpcre2.hpp" bodystart="255" bodyend="485"/>
    <listofallmembers>
      <member refid="classjpcre2_1_1RegexMatch_1a0a4cf8554a7e00f3cf2db34f60a43f60" prot="public" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>addJpcre2Option</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a08c2e481fe8b9c001e67733fb4e33972" prot="public" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>addModifier</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1aac4857cd8f5eae15b29b9afbe9023522" prot="public" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>addPcre2Option</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a154430c66b8794d6632be6211a3ce870" prot="public" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>changeJpcre2Option</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a877be3123d789020d259939bc79e8cfe" prot="public" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>changeModifier</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a6893abc21b24a9d9fca146a33c0f823c" prot="public" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>changePcre2Option</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1ac494245673c474d518e8ae47b2ab9db9" prot="private" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>getNamedSubstrings</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a82bfef9700b1c62b84e4a32ee4b0731e" prot="private" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>getNumberedSubstrings</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a3da6a2319cd577d7f2f10c66dcf59a99" prot="private" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>init_vars</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a70d62df887eeed237724f64fbc378700" prot="private" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>jpcre2_match_opts</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a9df4f1897e7fa33e05a9f6f938992ca7" prot="private" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>m_subject</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a5868aef3a146594ea1ebef34d122bb33" prot="public" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>match</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a697d5731007350b0f20d2018fcfafa90" prot="private" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>match_opts</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a36749947847f266de03c3991ac88a694" prot="private" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>nas_map0</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a1c790683d023313967ce80db6045419f" prot="private" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>ntn_map0</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a94ad930ea8cb22873737fda344bae508" prot="private" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>num_map0</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1aeeffc8edc43a8e5d1d24ae4055213730" prot="private" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>pushMapsIntoVectors</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a7743b27db00c1e13d8fee51b70d5a133" prot="private" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>re</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a1f6f7620b7d2218c6c2a6a47f432ea6a" prot="private" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>Regex</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a40127e5057e2343848d8c8a6d4c32bcd" prot="private" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>RegexMatch</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a098ddb46b2f297870ea548ef07597d94" prot="private" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>RegexMatch</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1ae586d43ec197c57c66086eeb4f8d83a1" prot="public" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>setFindAll</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a9e04456a81606362a2ecdf748912e3ea" prot="public" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>setFindAll</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a0d76033d9c134caa9ddfc21849603920" prot="public" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>setJpcre2Option</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a9df7e92f96b61553f62720cb8f5f23e5" prot="public" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>setModifier</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1ae495431f57cae54363331237ab21b56c" prot="public" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>setNamedSubstringVector</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a04926e61d8b5f1d8bdf344efecd567d8" prot="public" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>setNameToNumberMapVector</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a2c7efe1ec2e13827f670db4ecedcd0a0" prot="public" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>setNumberedSubstringVector</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1ae4ab558c2bec0bc9639dbca70ab47496" prot="public" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>setPcre2Option</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a635c652195deaa8ebb9e107c4f972aab" prot="public" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>setSubject</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a812b57dc08fdc0caa93a1b508ef8242c" prot="private" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>vec_nas</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a86ef413ab6d237972af858be26ff77f7" prot="private" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>vec_ntn</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1a836705e0444568c78abaab4c8e351335" prot="private" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>vec_num</name></member>
      <member refid="classjpcre2_1_1RegexMatch_1ab6a9f9b8404852e46edd08a5b8712847" prot="private" virt="non-virtual"><scope>jpcre2::RegexMatch</scope><name>~RegexMatch</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
