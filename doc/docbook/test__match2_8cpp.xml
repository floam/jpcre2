<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="test__match2_8cpp">
    <title>test_match2.cpp File Reference</title>
    <programlisting>#include &lt;iostream&gt;</programlisting>
    <programlisting>#include &quot;jpcre2.hpp&quot;</programlisting>
<para>Include dependency diagram for test_match2.cpp</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="test__match2_8cpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Included by dependency diagram for test_match2.cpp</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="test__match2_8cpp__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title>Macros</title>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="test__match2_8cpp_1a0efdcb15269092623bd8d80b8d129239">getLine</link> std::getline(std::cin,a,&apos;\n&apos;);</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Functions</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="test__match2_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Detailed Description</title>
    <para>Definition in file test_match2.cpp</para>
    </simplesect>
    <literallayout><computeroutput>
1 <emphasis class="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
2 <emphasis class="preprocessor">#include&#32;&quot;<link linkend="jpcre2_8hpp">jpcre2.hpp</link>&quot;</emphasis>
3 
4 <emphasis class="preprocessor">#define&#32;getLine(a)&#32;std::getline(std::cin,a,&apos;\n&apos;);</emphasis>
5 
6 
7 <emphasis class="keywordtype">int</emphasis>&#32;main(){
8 
9 &#32;&#32;&#32;&#32;<link linkend="namespacejpcre2_1ac1cf752c8fbb0be78020be3b80e77ce3">jpcre2::VecNum</link>&#32;vec_num0;&#32;&#32;&#32;
10 &#32;&#32;&#32;&#32;<link linkend="namespacejpcre2_1a2b121ae776ea5b2913839f418a7d856b">jpcre2::VecNas</link>&#32;vec_nas0;&#32;&#32;&#32;
11 &#32;&#32;&#32;&#32;<link linkend="namespacejpcre2_1a88a7aaf84cad627d34c8152e726168eb">jpcre2::VecNtN</link>&#32;vec_nn0;&#32;&#32;&#32;&#32;
12 &#32;&#32;&#32;&#32;
13 &#32;&#32;&#32;
14 &#32;&#32;&#32;&#32;std::string&#32;pat,mod,subject;
15 &#32;&#32;&#32;&#32;
17 &#32;&#32;&#32;&#32;jpcre2::Regex&#32;re;&#32;&#32;&#32;&#32;&#32;
18 
19 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis class="stringliteral">&quot;Enter&#32;pattern:&#32;&quot;</emphasis>;
20 &#32;&#32;&#32;&#32;getLine(pat);
21 &#32;&#32;&#32;&#32;cp:
22 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis class="stringliteral">&quot;Enter&#32;compile&#32;modifiers&#32;(eijmnsuxADJSU):&#32;&quot;</emphasis>;
23 &#32;&#32;&#32;&#32;getLine(mod);
24 &#32;&#32;&#32;&#32;
26 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">try</emphasis>{re.compile(pat,mod);}
27 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">catch</emphasis>(<emphasis class="keywordtype">int</emphasis>&#32;e){std::cout&lt;&lt;re.getErrorMessage(e)&lt;&lt;std::endl;<emphasis class="keywordflow">goto</emphasis>&#32;cp;}
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
29 &#32;&#32;&#32;&#32;<emphasis class="comment">/***************************************************************************************************************</emphasis>
30 <emphasis class="comment">&#32;&#32;&#32;&#32;&#32;*&#32;Always&#32;use&#32;try&#32;catch&#32;block&#32;to&#32;catch&#32;any&#32;exception&#32;and&#32;avoid&#32;unexpected&#32;termination&#32;of&#32;the&#32;program.</emphasis>
31 <emphasis class="comment">&#32;&#32;&#32;&#32;&#32;*&#32;All&#32;jpcre2&#32;exceptions&#32;are&#32;of&#32;type&#32;int&#32;(integer)</emphasis>
32 <emphasis class="comment">&#32;&#32;&#32;&#32;&#32;*&#32;*************************************************************************************************************/</emphasis>
33 &#32;&#32;&#32;&#32;
34 
36 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis class="stringliteral">&quot;\nEnter&#32;subject&#32;string&#32;(enter&#32;quit&#32;to&#32;quit):&#32;&quot;</emphasis>&lt;&lt;std::endl;
37 &#32;&#32;&#32;&#32;getLine(subject);
38 &#32;&#32;&#32;&#32;std::string&#32;ac_mod;
39 &#32;&#32;&#32;&#32;loop2:
40 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis class="stringliteral">&quot;\nEnter&#32;action&#32;(matching)&#32;modifier&#32;(Ag):&#32;&quot;</emphasis>&lt;&lt;std::endl;
41 &#32;&#32;&#32;&#32;getLine(ac_mod);
42 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(subject==<emphasis class="stringliteral">&quot;quit&quot;</emphasis>)<emphasis class="keywordflow">return</emphasis>&#32;0;
43 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">size_t</emphasis>&#32;matched=0;
44 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">try</emphasis>{matched=re.initMatch()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//Invoke&#32;the&#32;match()&#32;function</emphasis>
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.setModifier(ac_mod)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//Set&#32;various&#32;options</emphasis>
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.setNumberedSubstringVector(&amp;vec_num0)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//...</emphasis>
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.setNamedSubstringVector(&amp;vec_nas0)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//...</emphasis>
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.setNameToNumberMapVector(&amp;vec_nn0)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//...</emphasis>
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.addJpcre2Option(<link linkend="namespacejpcre2_1a85c143271501e383843f45b9999c2f00a9124b768bcae4d51430aa7f26126f387">jpcre2::VALIDATE_MODIFIER</link>)&#32;&#32;<emphasis class="comment">//...</emphasis>
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.addPcre2Option(0)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//...</emphasis>
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.match();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//Finally&#32;execute&#32;it.</emphasis>
52 &#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
53 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">catch</emphasis>(<emphasis class="keywordtype">int</emphasis>&#32;e){std::cout&lt;&lt;re.getErrorMessage(e);
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(e==<link linkend="namespacejpcre2_1_1ERROR_1a4b2998984439438fa9da8d7043909bc2a4115340549b623f4e2da285bf0aa9bff">jpcre2::ERROR::INVALID_MODIFIER</link>)&#32;<emphasis class="keywordflow">goto</emphasis>&#32;loop2;
55 &#32;&#32;&#32;&#32;}&#32;&#32;
56 
58 &#32;&#32;&#32;&#32;
62 &#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis class="stringliteral">&quot;\nTotal&#32;number&#32;of&#32;matches:&#32;&quot;</emphasis>&lt;&lt;matched&lt;&lt;std::endl;
63 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(matched){
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>(<emphasis class="keywordtype">size_t</emphasis>&#32;i=0;i&lt;vec_num0.size();++i){
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;&#32;<emphasis class="stringliteral">&quot;\n##################&#32;Match&#32;no:&#32;&quot;</emphasis>&lt;&lt;i+1&lt;&lt;<emphasis class="stringliteral">&quot;&#32;####################\n&quot;</emphasis>;
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis class="stringliteral">&quot;\n-------------------------------------------------------------------------&quot;</emphasis>;
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;&#32;<emphasis class="stringliteral">&quot;\n---&#32;Numbered&#32;Substrings&#32;(number:&#32;substring)&#32;for&#32;match&#32;&quot;</emphasis>&lt;&lt;i+1&lt;&lt;<emphasis class="stringliteral">&quot;&#32;---\n&quot;</emphasis>;
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>(jpcre2::MapNum::iterator&#32;ent=vec_num0[i].begin();ent!=vec_num0[i].end();++ent){
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis class="stringliteral">&quot;\n\t&quot;</emphasis>&lt;&lt;ent-&gt;first&lt;&lt;<emphasis class="stringliteral">&quot;:&#32;&quot;</emphasis>&lt;&lt;ent-&gt;second&lt;&lt;<emphasis class="stringliteral">&quot;\n&quot;</emphasis>;
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis class="stringliteral">&quot;\n-------------------------------------------------------------------------&quot;</emphasis>;
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;&#32;<emphasis class="stringliteral">&quot;\n---&#32;Named&#32;Substrings&#32;(name:&#32;substring)&#32;for&#32;match&#32;&quot;</emphasis>&lt;&lt;i+1&lt;&lt;<emphasis class="stringliteral">&quot;&#32;---\n&quot;</emphasis>;
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>(jpcre2::MapNas::iterator&#32;ent=vec_nas0[i].begin();ent!=vec_nas0[i].end();++ent){
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis class="stringliteral">&quot;\n\t&quot;</emphasis>&lt;&lt;ent-&gt;first&lt;&lt;<emphasis class="stringliteral">&quot;:&#32;&quot;</emphasis>&lt;&lt;ent-&gt;second&lt;&lt;<emphasis class="stringliteral">&quot;\n&quot;</emphasis>;
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis class="stringliteral">&quot;\n-------------------------------------------------------------------------&quot;</emphasis>;
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;&#32;<emphasis class="stringliteral">&quot;\n---&#32;Name&#32;to&#32;number&#32;mapping&#32;(name:&#32;number/position)&#32;for&#32;match&#32;&quot;</emphasis>&lt;&lt;i+1&lt;&lt;<emphasis class="stringliteral">&quot;&#32;---\n&quot;</emphasis>;
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>(jpcre2::MapNtN::iterator&#32;ent=vec_nn0[i].begin();ent!=vec_nn0[i].end();++ent){
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis class="stringliteral">&quot;\n\t&quot;</emphasis>&lt;&lt;ent-&gt;first&lt;&lt;<emphasis class="stringliteral">&quot;:&#32;&quot;</emphasis>&lt;&lt;ent-&gt;second&lt;&lt;<emphasis class="stringliteral">&quot;\n&quot;</emphasis>;
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
97 &#32;&#32;&#32;&#32;}
98 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">else</emphasis>&#32;std::cout&lt;&lt;<emphasis class="stringliteral">&quot;\nNo&#32;match&#32;found\n&quot;</emphasis>;
99 &#32;&#32;&#32;&#32;main();
100 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;0;
101 }
    </computeroutput></literallayout>
</section>
